<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Broken Experiences - 500 Users Stress Test" enabled="true">
      <stringProp name="TestPlan.comments">STRESS TEST: 500 concurrent users - Finding breaking points</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL</stringProp>
            <stringProp name="Argument.value">http://localhost:3001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="API_URL" elementType="Argument">
            <stringProp name="Argument.name">API_URL</stringProp>
            <stringProp name="Argument.value">http://localhost:4000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      <!-- Primary Load Generation -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="500 Users - Primary Load" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControllerGui" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">400</stringProp>
        <stringProp name="ThreadGroup.ramp_time">300</stringProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <!-- HTTP Configuration with Connection Pooling -->
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">10</stringProp>
          <stringProp name="HTTPSampler.connect_timeout">10000</stringProp>
          <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
        </ConfigTestElement>
        <hashTree/>

        <!-- Cookie Manager -->
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>

        <!-- Realistic User Behavior Simulation -->
        <RandomController guiclass="RandomControllerGui" testclass="RandomController" testname="Realistic User Mix" enabled="true"/>
        <hashTree>
          <!-- Heavy Browsing Load (50%) -->
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Heavy Browsers (50%)" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>50.0</value>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <!-- Rapid Page Navigation -->
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Rapid Home Load" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
              <stringProp name="HTTPSampler.path">/home</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <!-- Timeout Assertion -->
              <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Max 10s Response" enabled="true">
                <stringProp name="DurationAssertion.duration">10000</stringProp>
              </DurationAssertion>
              <hashTree/>
            </hashTree>

            <!-- Shorter think times for stress -->
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Quick Think" enabled="true">
              <stringProp name="ConstantTimer.delay">500</stringProp>
              <stringProp name="RandomTimer.range">2000</stringProp>
            </UniformRandomTimer>
            <hashTree/>

            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quick Leaderboard Check" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
              <stringProp name="HTTPSampler.path">/leaderboard</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            </HTTPSamplerProxy>
            <hashTree/>

            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Quick Map Check" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
              <stringProp name="HTTPSampler.path">/map</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>

          <!-- API Heavy Load (25%) -->
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="API Heavy Users (25%)" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>25.0</value>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <!-- Rapid API Calls -->
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Leaderboard API Hammer" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="limit" elementType="HTTPArgument">
                    <stringProp name="Argument.name">limit</stringProp>
                    <stringProp name="Argument.value">20</stringProp>
                  </elementProp>
                  <elementProp name="offset" elementType="HTTPArgument">
                    <stringProp name="Argument.name">offset</stringProp>
                    <stringProp name="Argument.value">${__Random(0,100)}</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${API_URL}</stringProp>
              <stringProp name="HTTPSampler.path">/scoring/leaderboard</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            </HTTPSamplerProxy>
            <hashTree/>

            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Stats API Hammer" enabled="true">
              <stringProp name="HTTPSampler.domain">${API_URL}</stringProp>
              <stringProp name="HTTPSampler.path">/stats</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            </HTTPSamplerProxy>
            <hashTree/>

            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User Stats API" enabled="true">
              <stringProp name="HTTPSampler.domain">${API_URL}</stringProp>
              <stringProp name="HTTPSampler.path">/stats/user</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>

          <!-- Data Creation Load (15%) -->
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Data Creators (15%)" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>15.0</value>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <!-- Experience Creation Under Load -->
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bulk Experience Creation" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{"title":"STRESS TEST Experience ${__time(,)}-${__threadNum}","description":"High load stress test experience. Thread: ${__threadNum}, Time: ${__time(yyyy-MM-dd HH:mm:ss)}","category":"stress-test","location":{"lat":${__Random(40,41)}.${__Random(1000,9999)},"lng":-${__Random(73,75)}.${__Random(1000,9999)}}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${API_URL}</stringProp>
              <stringProp name="HTTPSampler.path">/experience</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="JSON Headers" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>

            <!-- Short pause between creates -->
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Creation Pause" enabled="true">
              <stringProp name="ConstantTimer.delay">1000</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>

          <!-- Profile & System Checkers (10%) -->
          <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="System Checkers (10%)" enabled="true">
            <intProp name="ThroughputController.style">1</intProp>
            <boolProp name="ThroughputController.perThread">false</boolProp>
            <FloatProperty>
              <name>ThroughputController.percentThroughput</name>
              <value>10.0</value>
            </FloatProperty>
          </ThroughputController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Profile Under Load" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
              <stringProp name="HTTPSampler.path">/profile</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            </HTTPSamplerProxy>
            <hashTree/>

            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Settings Check" enabled="true">
              <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
              <stringProp name="HTTPSampler.path">/settings</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            </HTTPSamplerProxy>
            <hashTree/>
          </hashTree>
        </hashTree>

        <!-- Error Handling and Assertions -->
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="HTTP Success Codes" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
            <stringProp name="51512">201</stringProp>
            <stringProp name="51513">202</stringProp>
            <stringProp name="1302">204</stringProp>
          </collectionProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">1</intProp>
        </ResponseAssertion>
        <hashTree/>

        <!-- Results Collection for Analysis -->
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Error Results Only" enabled="false">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>false</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">results/500-users-errors.jtl</stringProp>
        </ResultCollector>
        <hashTree/>

        <!-- Summary Statistics -->
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">results/500-users-summary.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>

      <!-- Secondary Spike Load Thread Group -->
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="100 Users - Spike Load" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControllerGui" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">3</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay">300</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <!-- Spike Traffic Simulation -->
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spike - Home Bombardment" enabled="true">
          <stringProp name="HTTPSampler.domain">${BASE_URL}</stringProp>
          <stringProp name="HTTPSampler.path">/home</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Spike - API Bombardment" enabled="true">
          <stringProp name="HTTPSampler.domain">${API_URL}</stringProp>
          <stringProp name="HTTPSampler.path">/scoring/leaderboard</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
        </HTTPSamplerProxy>
        <hashTree/>

        <!-- Minimal think time for spike -->
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Spike Delay" enabled="true">
          <stringProp name="ConstantTimer.delay">200</stringProp>
        </ConstantTimer>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>